// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/mesg.proto

#ifndef PROTOBUF_messages_2fmesg_2eproto__INCLUDED
#define PROTOBUF_messages_2fmesg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace mesg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_messages_2fmesg_2eproto();
void protobuf_AssignDesc_messages_2fmesg_2eproto();
void protobuf_ShutdownFile_messages_2fmesg_2eproto();

class HeaderMesg;
class SecHeaderMesg;
class ProgHeaderMesg;

// ===================================================================

class HeaderMesg : public ::google::protobuf::Message {
 public:
  HeaderMesg();
  virtual ~HeaderMesg();
  
  HeaderMesg(const HeaderMesg& from);
  
  inline HeaderMesg& operator=(const HeaderMesg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeaderMesg& default_instance();
  
  void Swap(HeaderMesg* other);
  
  // implements Message ----------------------------------------------
  
  HeaderMesg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeaderMesg& from);
  void MergeFrom(const HeaderMesg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint64 type() const;
  inline void set_type(::google::protobuf::uint64 value);
  
  // required uint64 machine = 2;
  inline bool has_machine() const;
  inline void clear_machine();
  static const int kMachineFieldNumber = 2;
  inline ::google::protobuf::uint64 machine() const;
  inline void set_machine(::google::protobuf::uint64 value);
  
  // required uint64 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // required uint64 entry = 4;
  inline bool has_entry() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 4;
  inline ::google::protobuf::uint64 entry() const;
  inline void set_entry(::google::protobuf::uint64 value);
  
  // required uint64 phoff = 5;
  inline bool has_phoff() const;
  inline void clear_phoff();
  static const int kPhoffFieldNumber = 5;
  inline ::google::protobuf::uint64 phoff() const;
  inline void set_phoff(::google::protobuf::uint64 value);
  
  // required uint64 shoff = 6;
  inline bool has_shoff() const;
  inline void clear_shoff();
  static const int kShoffFieldNumber = 6;
  inline ::google::protobuf::uint64 shoff() const;
  inline void set_shoff(::google::protobuf::uint64 value);
  
  // required uint64 flags = 7;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 7;
  inline ::google::protobuf::uint64 flags() const;
  inline void set_flags(::google::protobuf::uint64 value);
  
  // required uint64 ehsize = 8;
  inline bool has_ehsize() const;
  inline void clear_ehsize();
  static const int kEhsizeFieldNumber = 8;
  inline ::google::protobuf::uint64 ehsize() const;
  inline void set_ehsize(::google::protobuf::uint64 value);
  
  // required uint64 phentsize = 9;
  inline bool has_phentsize() const;
  inline void clear_phentsize();
  static const int kPhentsizeFieldNumber = 9;
  inline ::google::protobuf::uint64 phentsize() const;
  inline void set_phentsize(::google::protobuf::uint64 value);
  
  // required uint64 phnum = 10;
  inline bool has_phnum() const;
  inline void clear_phnum();
  static const int kPhnumFieldNumber = 10;
  inline ::google::protobuf::uint64 phnum() const;
  inline void set_phnum(::google::protobuf::uint64 value);
  
  // required uint64 shentsize = 11;
  inline bool has_shentsize() const;
  inline void clear_shentsize();
  static const int kShentsizeFieldNumber = 11;
  inline ::google::protobuf::uint64 shentsize() const;
  inline void set_shentsize(::google::protobuf::uint64 value);
  
  // required uint64 shnum = 12;
  inline bool has_shnum() const;
  inline void clear_shnum();
  static const int kShnumFieldNumber = 12;
  inline ::google::protobuf::uint64 shnum() const;
  inline void set_shnum(::google::protobuf::uint64 value);
  
  // required uint64 shstrndx = 13;
  inline bool has_shstrndx() const;
  inline void clear_shstrndx();
  static const int kShstrndxFieldNumber = 13;
  inline ::google::protobuf::uint64 shstrndx() const;
  inline void set_shstrndx(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesg.HeaderMesg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_machine();
  inline void clear_has_machine();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_entry();
  inline void clear_has_entry();
  inline void set_has_phoff();
  inline void clear_has_phoff();
  inline void set_has_shoff();
  inline void clear_has_shoff();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_ehsize();
  inline void clear_has_ehsize();
  inline void set_has_phentsize();
  inline void clear_has_phentsize();
  inline void set_has_phnum();
  inline void clear_has_phnum();
  inline void set_has_shentsize();
  inline void clear_has_shentsize();
  inline void set_has_shnum();
  inline void clear_has_shnum();
  inline void set_has_shstrndx();
  inline void clear_has_shstrndx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 type_;
  ::google::protobuf::uint64 machine_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 entry_;
  ::google::protobuf::uint64 phoff_;
  ::google::protobuf::uint64 shoff_;
  ::google::protobuf::uint64 flags_;
  ::google::protobuf::uint64 ehsize_;
  ::google::protobuf::uint64 phentsize_;
  ::google::protobuf::uint64 phnum_;
  ::google::protobuf::uint64 shentsize_;
  ::google::protobuf::uint64 shnum_;
  ::google::protobuf::uint64 shstrndx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_messages_2fmesg_2eproto();
  friend void protobuf_AssignDesc_messages_2fmesg_2eproto();
  friend void protobuf_ShutdownFile_messages_2fmesg_2eproto();
  
  void InitAsDefaultInstance();
  static HeaderMesg* default_instance_;
};
// -------------------------------------------------------------------

class SecHeaderMesg : public ::google::protobuf::Message {
 public:
  SecHeaderMesg();
  virtual ~SecHeaderMesg();
  
  SecHeaderMesg(const SecHeaderMesg& from);
  
  inline SecHeaderMesg& operator=(const SecHeaderMesg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SecHeaderMesg& default_instance();
  
  void Swap(SecHeaderMesg* other);
  
  // implements Message ----------------------------------------------
  
  SecHeaderMesg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecHeaderMesg& from);
  void MergeFrom(const SecHeaderMesg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline ::google::protobuf::uint64 name() const;
  inline void set_name(::google::protobuf::uint64 value);
  
  // required uint64 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint64 type() const;
  inline void set_type(::google::protobuf::uint64 value);
  
  // required uint64 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint64 flags() const;
  inline void set_flags(::google::protobuf::uint64 value);
  
  // required uint64 addr = 4;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 4;
  inline ::google::protobuf::uint64 addr() const;
  inline void set_addr(::google::protobuf::uint64 value);
  
  // required uint64 offset = 5;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 5;
  inline ::google::protobuf::uint64 offset() const;
  inline void set_offset(::google::protobuf::uint64 value);
  
  // required uint64 size = 6;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 6;
  inline ::google::protobuf::uint64 size() const;
  inline void set_size(::google::protobuf::uint64 value);
  
  // required uint64 link = 7;
  inline bool has_link() const;
  inline void clear_link();
  static const int kLinkFieldNumber = 7;
  inline ::google::protobuf::uint64 link() const;
  inline void set_link(::google::protobuf::uint64 value);
  
  // required uint64 info = 8;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 8;
  inline ::google::protobuf::uint64 info() const;
  inline void set_info(::google::protobuf::uint64 value);
  
  // required uint64 addralign = 9;
  inline bool has_addralign() const;
  inline void clear_addralign();
  static const int kAddralignFieldNumber = 9;
  inline ::google::protobuf::uint64 addralign() const;
  inline void set_addralign(::google::protobuf::uint64 value);
  
  // required uint64 entsize = 10;
  inline bool has_entsize() const;
  inline void clear_entsize();
  static const int kEntsizeFieldNumber = 10;
  inline ::google::protobuf::uint64 entsize() const;
  inline void set_entsize(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesg.SecHeaderMesg)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_link();
  inline void clear_has_link();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_addralign();
  inline void clear_has_addralign();
  inline void set_has_entsize();
  inline void clear_has_entsize();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 name_;
  ::google::protobuf::uint64 type_;
  ::google::protobuf::uint64 flags_;
  ::google::protobuf::uint64 addr_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint64 link_;
  ::google::protobuf::uint64 info_;
  ::google::protobuf::uint64 addralign_;
  ::google::protobuf::uint64 entsize_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_messages_2fmesg_2eproto();
  friend void protobuf_AssignDesc_messages_2fmesg_2eproto();
  friend void protobuf_ShutdownFile_messages_2fmesg_2eproto();
  
  void InitAsDefaultInstance();
  static SecHeaderMesg* default_instance_;
};
// -------------------------------------------------------------------

class ProgHeaderMesg : public ::google::protobuf::Message {
 public:
  ProgHeaderMesg();
  virtual ~ProgHeaderMesg();
  
  ProgHeaderMesg(const ProgHeaderMesg& from);
  
  inline ProgHeaderMesg& operator=(const ProgHeaderMesg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProgHeaderMesg& default_instance();
  
  void Swap(ProgHeaderMesg* other);
  
  // implements Message ----------------------------------------------
  
  ProgHeaderMesg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProgHeaderMesg& from);
  void MergeFrom(const ProgHeaderMesg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint64 type() const;
  inline void set_type(::google::protobuf::uint64 value);
  
  // required uint64 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::uint64 offset() const;
  inline void set_offset(::google::protobuf::uint64 value);
  
  // required uint64 vaddr = 3;
  inline bool has_vaddr() const;
  inline void clear_vaddr();
  static const int kVaddrFieldNumber = 3;
  inline ::google::protobuf::uint64 vaddr() const;
  inline void set_vaddr(::google::protobuf::uint64 value);
  
  // required uint64 paddr = 4;
  inline bool has_paddr() const;
  inline void clear_paddr();
  static const int kPaddrFieldNumber = 4;
  inline ::google::protobuf::uint64 paddr() const;
  inline void set_paddr(::google::protobuf::uint64 value);
  
  // required uint64 filesz = 5;
  inline bool has_filesz() const;
  inline void clear_filesz();
  static const int kFileszFieldNumber = 5;
  inline ::google::protobuf::uint64 filesz() const;
  inline void set_filesz(::google::protobuf::uint64 value);
  
  // required uint64 memsz = 6;
  inline bool has_memsz() const;
  inline void clear_memsz();
  static const int kMemszFieldNumber = 6;
  inline ::google::protobuf::uint64 memsz() const;
  inline void set_memsz(::google::protobuf::uint64 value);
  
  // required uint64 flags = 7;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 7;
  inline ::google::protobuf::uint64 flags() const;
  inline void set_flags(::google::protobuf::uint64 value);
  
  // required uint64 align = 8;
  inline bool has_align() const;
  inline void clear_align();
  static const int kAlignFieldNumber = 8;
  inline ::google::protobuf::uint64 align() const;
  inline void set_align(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesg.ProgHeaderMesg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_vaddr();
  inline void clear_has_vaddr();
  inline void set_has_paddr();
  inline void clear_has_paddr();
  inline void set_has_filesz();
  inline void clear_has_filesz();
  inline void set_has_memsz();
  inline void clear_has_memsz();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_align();
  inline void clear_has_align();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 type_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 vaddr_;
  ::google::protobuf::uint64 paddr_;
  ::google::protobuf::uint64 filesz_;
  ::google::protobuf::uint64 memsz_;
  ::google::protobuf::uint64 flags_;
  ::google::protobuf::uint64 align_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_messages_2fmesg_2eproto();
  friend void protobuf_AssignDesc_messages_2fmesg_2eproto();
  friend void protobuf_ShutdownFile_messages_2fmesg_2eproto();
  
  void InitAsDefaultInstance();
  static ProgHeaderMesg* default_instance_;
};
// ===================================================================


// ===================================================================

// HeaderMesg

// required uint64 type = 1;
inline bool HeaderMesg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeaderMesg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeaderMesg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeaderMesg::clear_type() {
  type_ = GOOGLE_ULONGLONG(0);
  clear_has_type();
}
inline ::google::protobuf::uint64 HeaderMesg::type() const {
  return type_;
}
inline void HeaderMesg::set_type(::google::protobuf::uint64 value) {
  set_has_type();
  type_ = value;
}

// required uint64 machine = 2;
inline bool HeaderMesg::has_machine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeaderMesg::set_has_machine() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeaderMesg::clear_has_machine() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeaderMesg::clear_machine() {
  machine_ = GOOGLE_ULONGLONG(0);
  clear_has_machine();
}
inline ::google::protobuf::uint64 HeaderMesg::machine() const {
  return machine_;
}
inline void HeaderMesg::set_machine(::google::protobuf::uint64 value) {
  set_has_machine();
  machine_ = value;
}

// required uint64 version = 3;
inline bool HeaderMesg::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeaderMesg::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeaderMesg::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeaderMesg::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 HeaderMesg::version() const {
  return version_;
}
inline void HeaderMesg::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// required uint64 entry = 4;
inline bool HeaderMesg::has_entry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeaderMesg::set_has_entry() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeaderMesg::clear_has_entry() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeaderMesg::clear_entry() {
  entry_ = GOOGLE_ULONGLONG(0);
  clear_has_entry();
}
inline ::google::protobuf::uint64 HeaderMesg::entry() const {
  return entry_;
}
inline void HeaderMesg::set_entry(::google::protobuf::uint64 value) {
  set_has_entry();
  entry_ = value;
}

// required uint64 phoff = 5;
inline bool HeaderMesg::has_phoff() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeaderMesg::set_has_phoff() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeaderMesg::clear_has_phoff() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeaderMesg::clear_phoff() {
  phoff_ = GOOGLE_ULONGLONG(0);
  clear_has_phoff();
}
inline ::google::protobuf::uint64 HeaderMesg::phoff() const {
  return phoff_;
}
inline void HeaderMesg::set_phoff(::google::protobuf::uint64 value) {
  set_has_phoff();
  phoff_ = value;
}

// required uint64 shoff = 6;
inline bool HeaderMesg::has_shoff() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeaderMesg::set_has_shoff() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeaderMesg::clear_has_shoff() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeaderMesg::clear_shoff() {
  shoff_ = GOOGLE_ULONGLONG(0);
  clear_has_shoff();
}
inline ::google::protobuf::uint64 HeaderMesg::shoff() const {
  return shoff_;
}
inline void HeaderMesg::set_shoff(::google::protobuf::uint64 value) {
  set_has_shoff();
  shoff_ = value;
}

// required uint64 flags = 7;
inline bool HeaderMesg::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeaderMesg::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeaderMesg::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeaderMesg::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
  clear_has_flags();
}
inline ::google::protobuf::uint64 HeaderMesg::flags() const {
  return flags_;
}
inline void HeaderMesg::set_flags(::google::protobuf::uint64 value) {
  set_has_flags();
  flags_ = value;
}

// required uint64 ehsize = 8;
inline bool HeaderMesg::has_ehsize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeaderMesg::set_has_ehsize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeaderMesg::clear_has_ehsize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeaderMesg::clear_ehsize() {
  ehsize_ = GOOGLE_ULONGLONG(0);
  clear_has_ehsize();
}
inline ::google::protobuf::uint64 HeaderMesg::ehsize() const {
  return ehsize_;
}
inline void HeaderMesg::set_ehsize(::google::protobuf::uint64 value) {
  set_has_ehsize();
  ehsize_ = value;
}

// required uint64 phentsize = 9;
inline bool HeaderMesg::has_phentsize() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeaderMesg::set_has_phentsize() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeaderMesg::clear_has_phentsize() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeaderMesg::clear_phentsize() {
  phentsize_ = GOOGLE_ULONGLONG(0);
  clear_has_phentsize();
}
inline ::google::protobuf::uint64 HeaderMesg::phentsize() const {
  return phentsize_;
}
inline void HeaderMesg::set_phentsize(::google::protobuf::uint64 value) {
  set_has_phentsize();
  phentsize_ = value;
}

// required uint64 phnum = 10;
inline bool HeaderMesg::has_phnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HeaderMesg::set_has_phnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HeaderMesg::clear_has_phnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HeaderMesg::clear_phnum() {
  phnum_ = GOOGLE_ULONGLONG(0);
  clear_has_phnum();
}
inline ::google::protobuf::uint64 HeaderMesg::phnum() const {
  return phnum_;
}
inline void HeaderMesg::set_phnum(::google::protobuf::uint64 value) {
  set_has_phnum();
  phnum_ = value;
}

// required uint64 shentsize = 11;
inline bool HeaderMesg::has_shentsize() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HeaderMesg::set_has_shentsize() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HeaderMesg::clear_has_shentsize() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HeaderMesg::clear_shentsize() {
  shentsize_ = GOOGLE_ULONGLONG(0);
  clear_has_shentsize();
}
inline ::google::protobuf::uint64 HeaderMesg::shentsize() const {
  return shentsize_;
}
inline void HeaderMesg::set_shentsize(::google::protobuf::uint64 value) {
  set_has_shentsize();
  shentsize_ = value;
}

// required uint64 shnum = 12;
inline bool HeaderMesg::has_shnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HeaderMesg::set_has_shnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HeaderMesg::clear_has_shnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HeaderMesg::clear_shnum() {
  shnum_ = GOOGLE_ULONGLONG(0);
  clear_has_shnum();
}
inline ::google::protobuf::uint64 HeaderMesg::shnum() const {
  return shnum_;
}
inline void HeaderMesg::set_shnum(::google::protobuf::uint64 value) {
  set_has_shnum();
  shnum_ = value;
}

// required uint64 shstrndx = 13;
inline bool HeaderMesg::has_shstrndx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HeaderMesg::set_has_shstrndx() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HeaderMesg::clear_has_shstrndx() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HeaderMesg::clear_shstrndx() {
  shstrndx_ = GOOGLE_ULONGLONG(0);
  clear_has_shstrndx();
}
inline ::google::protobuf::uint64 HeaderMesg::shstrndx() const {
  return shstrndx_;
}
inline void HeaderMesg::set_shstrndx(::google::protobuf::uint64 value) {
  set_has_shstrndx();
  shstrndx_ = value;
}

// -------------------------------------------------------------------

// SecHeaderMesg

// required uint64 name = 1;
inline bool SecHeaderMesg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecHeaderMesg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecHeaderMesg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SecHeaderMesg::clear_name() {
  name_ = GOOGLE_ULONGLONG(0);
  clear_has_name();
}
inline ::google::protobuf::uint64 SecHeaderMesg::name() const {
  return name_;
}
inline void SecHeaderMesg::set_name(::google::protobuf::uint64 value) {
  set_has_name();
  name_ = value;
}

// required uint64 type = 2;
inline bool SecHeaderMesg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SecHeaderMesg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SecHeaderMesg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SecHeaderMesg::clear_type() {
  type_ = GOOGLE_ULONGLONG(0);
  clear_has_type();
}
inline ::google::protobuf::uint64 SecHeaderMesg::type() const {
  return type_;
}
inline void SecHeaderMesg::set_type(::google::protobuf::uint64 value) {
  set_has_type();
  type_ = value;
}

// required uint64 flags = 3;
inline bool SecHeaderMesg::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SecHeaderMesg::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SecHeaderMesg::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SecHeaderMesg::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
  clear_has_flags();
}
inline ::google::protobuf::uint64 SecHeaderMesg::flags() const {
  return flags_;
}
inline void SecHeaderMesg::set_flags(::google::protobuf::uint64 value) {
  set_has_flags();
  flags_ = value;
}

// required uint64 addr = 4;
inline bool SecHeaderMesg::has_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SecHeaderMesg::set_has_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SecHeaderMesg::clear_has_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SecHeaderMesg::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
inline ::google::protobuf::uint64 SecHeaderMesg::addr() const {
  return addr_;
}
inline void SecHeaderMesg::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
}

// required uint64 offset = 5;
inline bool SecHeaderMesg::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SecHeaderMesg::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SecHeaderMesg::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SecHeaderMesg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 SecHeaderMesg::offset() const {
  return offset_;
}
inline void SecHeaderMesg::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
}

// required uint64 size = 6;
inline bool SecHeaderMesg::has_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SecHeaderMesg::set_has_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SecHeaderMesg::clear_has_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SecHeaderMesg::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 SecHeaderMesg::size() const {
  return size_;
}
inline void SecHeaderMesg::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
}

// required uint64 link = 7;
inline bool SecHeaderMesg::has_link() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SecHeaderMesg::set_has_link() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SecHeaderMesg::clear_has_link() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SecHeaderMesg::clear_link() {
  link_ = GOOGLE_ULONGLONG(0);
  clear_has_link();
}
inline ::google::protobuf::uint64 SecHeaderMesg::link() const {
  return link_;
}
inline void SecHeaderMesg::set_link(::google::protobuf::uint64 value) {
  set_has_link();
  link_ = value;
}

// required uint64 info = 8;
inline bool SecHeaderMesg::has_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SecHeaderMesg::set_has_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SecHeaderMesg::clear_has_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SecHeaderMesg::clear_info() {
  info_ = GOOGLE_ULONGLONG(0);
  clear_has_info();
}
inline ::google::protobuf::uint64 SecHeaderMesg::info() const {
  return info_;
}
inline void SecHeaderMesg::set_info(::google::protobuf::uint64 value) {
  set_has_info();
  info_ = value;
}

// required uint64 addralign = 9;
inline bool SecHeaderMesg::has_addralign() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SecHeaderMesg::set_has_addralign() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SecHeaderMesg::clear_has_addralign() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SecHeaderMesg::clear_addralign() {
  addralign_ = GOOGLE_ULONGLONG(0);
  clear_has_addralign();
}
inline ::google::protobuf::uint64 SecHeaderMesg::addralign() const {
  return addralign_;
}
inline void SecHeaderMesg::set_addralign(::google::protobuf::uint64 value) {
  set_has_addralign();
  addralign_ = value;
}

// required uint64 entsize = 10;
inline bool SecHeaderMesg::has_entsize() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SecHeaderMesg::set_has_entsize() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SecHeaderMesg::clear_has_entsize() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SecHeaderMesg::clear_entsize() {
  entsize_ = GOOGLE_ULONGLONG(0);
  clear_has_entsize();
}
inline ::google::protobuf::uint64 SecHeaderMesg::entsize() const {
  return entsize_;
}
inline void SecHeaderMesg::set_entsize(::google::protobuf::uint64 value) {
  set_has_entsize();
  entsize_ = value;
}

// -------------------------------------------------------------------

// ProgHeaderMesg

// required uint64 type = 1;
inline bool ProgHeaderMesg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProgHeaderMesg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProgHeaderMesg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProgHeaderMesg::clear_type() {
  type_ = GOOGLE_ULONGLONG(0);
  clear_has_type();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::type() const {
  return type_;
}
inline void ProgHeaderMesg::set_type(::google::protobuf::uint64 value) {
  set_has_type();
  type_ = value;
}

// required uint64 offset = 2;
inline bool ProgHeaderMesg::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProgHeaderMesg::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProgHeaderMesg::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProgHeaderMesg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::offset() const {
  return offset_;
}
inline void ProgHeaderMesg::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
}

// required uint64 vaddr = 3;
inline bool ProgHeaderMesg::has_vaddr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProgHeaderMesg::set_has_vaddr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProgHeaderMesg::clear_has_vaddr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProgHeaderMesg::clear_vaddr() {
  vaddr_ = GOOGLE_ULONGLONG(0);
  clear_has_vaddr();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::vaddr() const {
  return vaddr_;
}
inline void ProgHeaderMesg::set_vaddr(::google::protobuf::uint64 value) {
  set_has_vaddr();
  vaddr_ = value;
}

// required uint64 paddr = 4;
inline bool ProgHeaderMesg::has_paddr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProgHeaderMesg::set_has_paddr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProgHeaderMesg::clear_has_paddr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProgHeaderMesg::clear_paddr() {
  paddr_ = GOOGLE_ULONGLONG(0);
  clear_has_paddr();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::paddr() const {
  return paddr_;
}
inline void ProgHeaderMesg::set_paddr(::google::protobuf::uint64 value) {
  set_has_paddr();
  paddr_ = value;
}

// required uint64 filesz = 5;
inline bool ProgHeaderMesg::has_filesz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProgHeaderMesg::set_has_filesz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProgHeaderMesg::clear_has_filesz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProgHeaderMesg::clear_filesz() {
  filesz_ = GOOGLE_ULONGLONG(0);
  clear_has_filesz();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::filesz() const {
  return filesz_;
}
inline void ProgHeaderMesg::set_filesz(::google::protobuf::uint64 value) {
  set_has_filesz();
  filesz_ = value;
}

// required uint64 memsz = 6;
inline bool ProgHeaderMesg::has_memsz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProgHeaderMesg::set_has_memsz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProgHeaderMesg::clear_has_memsz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProgHeaderMesg::clear_memsz() {
  memsz_ = GOOGLE_ULONGLONG(0);
  clear_has_memsz();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::memsz() const {
  return memsz_;
}
inline void ProgHeaderMesg::set_memsz(::google::protobuf::uint64 value) {
  set_has_memsz();
  memsz_ = value;
}

// required uint64 flags = 7;
inline bool ProgHeaderMesg::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProgHeaderMesg::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProgHeaderMesg::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProgHeaderMesg::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
  clear_has_flags();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::flags() const {
  return flags_;
}
inline void ProgHeaderMesg::set_flags(::google::protobuf::uint64 value) {
  set_has_flags();
  flags_ = value;
}

// required uint64 align = 8;
inline bool ProgHeaderMesg::has_align() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProgHeaderMesg::set_has_align() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProgHeaderMesg::clear_has_align() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProgHeaderMesg::clear_align() {
  align_ = GOOGLE_ULONGLONG(0);
  clear_has_align();
}
inline ::google::protobuf::uint64 ProgHeaderMesg::align() const {
  return align_;
}
inline void ProgHeaderMesg::set_align(::google::protobuf::uint64 value) {
  set_has_align();
  align_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mesg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2fmesg_2eproto__INCLUDED
