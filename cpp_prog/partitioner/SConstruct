#!/usr/bin/python

include_dir = [ '/home/dyc/github/program/netlib/net_client',
                '/home/dyc/github/program/netlib/net_client/utils',
                '/home/dyc/github/program/netlib/net_client/tools',
                '/home/dyc/tools/zlib/include', 
                '/home/dyc/tools/log4c/include', 
                '/home/dyc/github/program/common', 
                '/home/dyc/github/program/common/thread', 
                '/home/dyc/github/program/common/utils']

lib_dir = ['.', 
            "/home/dyc/github/program/common", 
            "/home/dyc/github/program/netlib/net_client", 
            "/home/dyc/tools/zlib/lib", 
            "/home/dyc/tools/log4c/lib"
            ]

env = Environment(CPPPATH = ['.'])
deplibs=["common", "pthread"]

env.Program('partioner.cpp', 
        LIBPATH=lib_dir,
        LIBS=deplibs)

env = Environment(tools=['default', 'packaging'])
env.Install(install='/home/ding/test/bin/', source='partioner')

#env.Package( NAME           = 'foo',
#        VERSION        = '1.2.3',
#        PACKAGEVERSION = 0,
#        PACKAGETYPE    = 'rpm',
#        LICENSE        = 'gpl',
#        SUMMARY        = 'balalalalal',
#        DESCRIPTION    = 'this should be really really long',
#        X_RPM_GROUP    = 'Application/fu',
#        )

# env.Library(target = 'partitioner',
#              source = partitioner_sources,
#              dirInPackage = 'lib64')
# 
# util_sources = [str(fn) for fn in Glob('util/*.cpp')]
# env.Library(target = 'util',
#              source = util_sources,
#              dirInPackage = 'lib64')
# 
# 
# libsname=[
#      'partitioner',
#      'anet',
#      'util',
#      'alog',
#      'amonitor_client',
#      'protobuf',
#      'arpc',
#      'autil',
#      'pthread'
# ]
# 
# #Repository('/home/dingyc/program/cpp/', '/home/dingyc/program/cpp/util')
# env.Program("partitioner", "main.cpp", LIBPATH=["."], LIBS=libsname)

